version: '3'

# this volumes should be changed to local
volumes:
  #btc1: {}
  #btc2: {}
  #btc3: {}
  db1: {}
  db2: {}
  db3: {}

services:
  #########################################################################
  #Images based on
  #########################################################################
  base-ubuntu:
    build:
      context: ./docker/ubuntu/
      dockerfile: Dockerfile
    image: cayenne-wallet-ubuntu:18.04

  base-golang:
    build:
      context: ./docker/golang/
      dockerfile: Dockerfile
    image: cayenne-wallet-golang:1.11

  #########################################################################
  #Bitcoin core
  #########################################################################
  btc-wallet:
    build:
      context: ./docker/btc/
      dockerfile: Dockerfile
    image: cayenne-wallet-btc:0.17
    volumes:
    #- btc1:/root/.bitcoin
    #- ./bitcoin.example.conf:/root/.bitcoin/bitcoin.conf
    - ./docker/btc/data1:/root/.bitcoin
    ports:
    - "${RPC_PORT:-19332}:18332"
    stdin_open: true
    tty: true
    #    logging:
    #      driver: fluentd
    #      options:
    #        fluentd-address: "localhost:24224"
    #        tag: "docker.{{.ID}}"
    command: /usr/bin/bitcoind --printtoconsole #--conf=/root/.bitcoin/bitcoind.conf
    # docker-compose exec btc-wallet bash
    # /root/.bitcoin/testnet3/wallets

  btc-cold-wallet1:
    image: cayenne-wallet-btc:0.17
    volumes:
    #- btc2:/root/.bitcoin
    #- ./bitcoin.example.conf:/root/.bitcoin/bitcoin.conf
    - ./docker/btc/data2:/root/.bitcoin
    ports:
    - "${RPC_PORT:-19333}:18332"
    stdin_open: true
    tty: true
    #    logging:
    #      driver: fluentd
    #      options:
    #        fluentd-address: "localhost:24224"
    #        tag: "docker.{{.ID}}"
    command: /usr/bin/bitcoind -maxconnections=0 --printtoconsole
    # docker-compose exec btc-cold-wallet1 bash
    # /root/.bitcoin/testnet3/wallets

  btc-cold-wallet2:
    image: cayenne-wallet-btc:0.17
    volumes:
    #- btc3:/root/.bitcoin
    #- ./bitcoin.example.conf:/root/.bitcoin/bitcoin.conf
    - ./docker/btc/data3:/root/.bitcoin
    ports:
    - "${RPC_PORT:-19334}:18332"
    stdin_open: true
    tty: true
    #    logging:
    #      driver: fluentd
    #      options:
    #        fluentd-address: "localhost:24224"
    #        tag: "docker.{{.ID}}"
    command: /usr/bin/bitcoind -maxconnections=0 --printtoconsole
    # docker-compose exec btc-cold-wallet2 bash
    # /root/.bitcoin/testnet3/wallets

  #########################################################################
  # Wallet App
  #########################################################################
#  watch-only-wallet:
#    build:
#      context: ./docker/wallet/
#      dockerfile: Dockerfile
#    image: cayenne-wallet-app:1.0
#    links:
#      - btc-wallet:btc-core
#      - btc-wallet-db:mysql-server
#    depends_on:
#      - btc-wallet
#      - btc-wallet-db
#    environment:
#      CGO_ENABLED: 0
#      GOOS: linux
#      GO111MODULE: "on"
#    volumes:
#      - ./cmd:/go/src/github.com/hiromaily/go-bitcon/cmd
#      - ./data:/go/src/github.com/hiromaily/go-bitcon/data
#      - ./pkg:/go/src/github.com/hiromaily/go-bitcon/pkg
#      - ./go.mod:/go/src/github.com/hiromaily/go-bitcon/go.mod
#      - ./go.sum:/go/src/github.com/hiromaily/go-bitcon/go.sum
#      - ./Makefile:/go/src/github.com/hiromaily/go-bitcon/Makefile
#    stdin_open: true
#    tty: true
#    #    logging:
#    #      driver: fluentd
#    #      options:
#    #        fluentd-address: "localhost:24224"
#    #        tag: "docker.{{.ID}}"
#    command: bash
#    # docker-compose exec watch-only-wallet sh -c 'make bld-linux'
#    # docker-compose exec watch-only-wallet sh -c 'wallet -c xxx.toml xx xx'

  #########################################################################
  #Database
  #########################################################################
  #for watch only wallet
  btc-wallet-db:
    image: mysql:5.7
    volumes:
    - db1:/var/lib/mysql #this volume should be outside to keep on a permanent basis
    - "./docker/mysql/conf.d:/etc/mysql/conf.d"
    - "./docker/mysql/init.d:/docker-entrypoint-initdb.d"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
      MYSQL_USER: cayenne
      MYSQL_PASSWORD: cayenne
    ports:
    - "${MYSQL_PORT1:-3307}:3306"

  #for cold-wallet1
  btc-cold-wallet1-db:
    image: mysql:5.7
    volumes:
    - db2:/var/lib/mysql #this volume should be outside to keep on a permanent basis
    - "./docker/mysql2/conf.d:/etc/mysql/conf.d"
    - "./docker/mysql2/init.d:/docker-entrypoint-initdb.d"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cold_wallet1
      MYSQL_USER: cayenne
      MYSQL_PASSWORD: cayenne
    ports:
    - "${MYSQL_PORT2:-3308}:3306"

  #for cold-wallet2
  btc-cold-wallet2-db:
    image: mysql:5.7
    volumes:
    - db3:/var/lib/mysql #this volume should be outside to keep on a permanent basis
    - "./docker/mysql2/conf.d:/etc/mysql/conf.d"
    - "./docker/mysql2/init.d:/docker-entrypoint-initdb.d"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cold_wallet1
      MYSQL_USER: cayenne
      MYSQL_PASSWORD: cayenne
    ports:
    - "${MYSQL_PORT3:-3309}:3306"

  #########################################################################
  #Log monitoring
  #########################################################################
#  #Fluentd
#  #https://www.fluentd.org/guides/recipes/docker-logging
#  #https://docs.docker.com/config/containers/logging/fluentd/
#  fluentd:
#    build:
#      context: ./docker/fluentd/
#    ports:
#      - "24224:24224"
#      - "24224:24224/udp"
#
#  #Elasticsearch
#  #https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
#    expose:
#      - 9200
#      - 9300
#    environment:
#      - discovery.type=single-node
#    volumes:
#      #save to local
#      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data
#
#  #Grafana
#  grafana:
#    image: grafana/grafana:5.2.4
#    ports:
#      - 3000:3000
#    volumes:
#      #save to local
#      - ./docker/grafana:/var/lib/grafana
#    depends_on:
#      - elasticsearch
