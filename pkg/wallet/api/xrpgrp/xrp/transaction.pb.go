// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: transaction.proto

package xrp

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumTransactionType int32

const (
	EnumTransactionType_TX_ACCOUNT_SET            EnumTransactionType = 0  // AccountSet
	EnumTransactionType_TX_ACCOUNT_DELETE         EnumTransactionType = 1  // AccountDelete
	EnumTransactionType_TX_CHECK_CANCEL           EnumTransactionType = 2  // CheckCancel
	EnumTransactionType_TX_CHECK_CASH             EnumTransactionType = 3  // CheckCash
	EnumTransactionType_TX_CHECK_CREATE           EnumTransactionType = 4  // CheckCreate
	EnumTransactionType_TX_DEPOSIT_PREAUTH        EnumTransactionType = 5  // DepositPreauth
	EnumTransactionType_TX_ESCROW_CANCEL          EnumTransactionType = 6  // EscrowCancel
	EnumTransactionType_TX_ESCROW_CREATE          EnumTransactionType = 7  // EscrowCreate
	EnumTransactionType_TX_ESCROW_FINISH          EnumTransactionType = 8  // EscrowFinish
	EnumTransactionType_TX_OFFER_CANCEL           EnumTransactionType = 9  // OfferCancel
	EnumTransactionType_TX_OFFER_CREATE           EnumTransactionType = 10 // OfferCreate
	EnumTransactionType_TX_PAYMENT                EnumTransactionType = 11 // Payment
	EnumTransactionType_TX_PAYMENT_CHANNEL_CLAIM  EnumTransactionType = 12 // PaymentChannelClaim
	EnumTransactionType_TX_PAYMENT_CHANNEL_CREATE EnumTransactionType = 13 // PaymentChannelCreate
	EnumTransactionType_TX_PAYMENT_CHANNEL_FUND   EnumTransactionType = 14 // PaymentChannelFund
	EnumTransactionType_TX_SET_REGULAR_KEY        EnumTransactionType = 15 // SetRegularKey
	EnumTransactionType_TX_SINGER_LIST_SET        EnumTransactionType = 16 // SignerListSet
	EnumTransactionType_TX_TRUST_SET              EnumTransactionType = 17 // TrustSet
)

// Enum value maps for EnumTransactionType.
var (
	EnumTransactionType_name = map[int32]string{
		0:  "TX_ACCOUNT_SET",
		1:  "TX_ACCOUNT_DELETE",
		2:  "TX_CHECK_CANCEL",
		3:  "TX_CHECK_CASH",
		4:  "TX_CHECK_CREATE",
		5:  "TX_DEPOSIT_PREAUTH",
		6:  "TX_ESCROW_CANCEL",
		7:  "TX_ESCROW_CREATE",
		8:  "TX_ESCROW_FINISH",
		9:  "TX_OFFER_CANCEL",
		10: "TX_OFFER_CREATE",
		11: "TX_PAYMENT",
		12: "TX_PAYMENT_CHANNEL_CLAIM",
		13: "TX_PAYMENT_CHANNEL_CREATE",
		14: "TX_PAYMENT_CHANNEL_FUND",
		15: "TX_SET_REGULAR_KEY",
		16: "TX_SINGER_LIST_SET",
		17: "TX_TRUST_SET",
	}
	EnumTransactionType_value = map[string]int32{
		"TX_ACCOUNT_SET":            0,
		"TX_ACCOUNT_DELETE":         1,
		"TX_CHECK_CANCEL":           2,
		"TX_CHECK_CASH":             3,
		"TX_CHECK_CREATE":           4,
		"TX_DEPOSIT_PREAUTH":        5,
		"TX_ESCROW_CANCEL":          6,
		"TX_ESCROW_CREATE":          7,
		"TX_ESCROW_FINISH":          8,
		"TX_OFFER_CANCEL":           9,
		"TX_OFFER_CREATE":           10,
		"TX_PAYMENT":                11,
		"TX_PAYMENT_CHANNEL_CLAIM":  12,
		"TX_PAYMENT_CHANNEL_CREATE": 13,
		"TX_PAYMENT_CHANNEL_FUND":   14,
		"TX_SET_REGULAR_KEY":        15,
		"TX_SINGER_LIST_SET":        16,
		"TX_TRUST_SET":              17,
	}
)

func (x EnumTransactionType) Enum() *EnumTransactionType {
	p := new(EnumTransactionType)
	*p = x
	return p
}

func (x EnumTransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumTransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_transaction_proto_enumTypes[0].Descriptor()
}

func (EnumTransactionType) Type() protoreflect.EnumType {
	return &file_transaction_proto_enumTypes[0]
}

func (x EnumTransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumTransactionType.Descriptor instead.
func (EnumTransactionType) EnumDescriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

type Instructions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fee                    string `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	MaxFee                 string `protobuf:"bytes,2,opt,name=maxFee,proto3" json:"maxFee,omitempty"`
	MaxLedgerVersion       uint64 `protobuf:"varint,3,opt,name=maxLedgerVersion,proto3" json:"maxLedgerVersion,omitempty"`
	MaxLedgerVersionOffset uint64 `protobuf:"varint,4,opt,name=maxLedgerVersionOffset,proto3" json:"maxLedgerVersionOffset,omitempty"`
	Sequence               uint64 `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	SignersCount           uint64 `protobuf:"varint,6,opt,name=signersCount,proto3" json:"signersCount,omitempty"`
}

func (x *Instructions) Reset() {
	*x = Instructions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instructions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instructions) ProtoMessage() {}

func (x *Instructions) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instructions.ProtoReflect.Descriptor instead.
func (*Instructions) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Instructions) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *Instructions) GetMaxFee() string {
	if x != nil {
		return x.MaxFee
	}
	return ""
}

func (x *Instructions) GetMaxLedgerVersion() uint64 {
	if x != nil {
		return x.MaxLedgerVersion
	}
	return 0
}

func (x *Instructions) GetMaxLedgerVersionOffset() uint64 {
	if x != nil {
		return x.MaxLedgerVersionOffset
	}
	return 0
}

func (x *Instructions) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Instructions) GetSignersCount() uint64 {
	if x != nil {
		return x.SignersCount
	}
	return 0
}

type RequestPrepareTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxType          EnumTransactionType `protobuf:"varint,1,opt,name=tx_type,json=txType,proto3,enum=rippleapi.transaction.EnumTransactionType" json:"tx_type,omitempty"`
	SenderAccount   string              `protobuf:"bytes,2,opt,name=senderAccount,proto3" json:"senderAccount,omitempty"`
	Amount          float64             `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ReceiverAccount string              `protobuf:"bytes,4,opt,name=receiverAccount,proto3" json:"receiverAccount,omitempty"`
	Instructions    *Instructions       `protobuf:"bytes,5,opt,name=instructions,proto3" json:"instructions,omitempty"`
}

func (x *RequestPrepareTransaction) Reset() {
	*x = RequestPrepareTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPrepareTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPrepareTransaction) ProtoMessage() {}

func (x *RequestPrepareTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPrepareTransaction.ProtoReflect.Descriptor instead.
func (*RequestPrepareTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *RequestPrepareTransaction) GetTxType() EnumTransactionType {
	if x != nil {
		return x.TxType
	}
	return EnumTransactionType_TX_ACCOUNT_SET
}

func (x *RequestPrepareTransaction) GetSenderAccount() string {
	if x != nil {
		return x.SenderAccount
	}
	return ""
}

func (x *RequestPrepareTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RequestPrepareTransaction) GetReceiverAccount() string {
	if x != nil {
		return x.ReceiverAccount
	}
	return ""
}

func (x *RequestPrepareTransaction) GetInstructions() *Instructions {
	if x != nil {
		return x.Instructions
	}
	return nil
}

type ResponsePrepareTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxJSON       string        `protobuf:"bytes,1,opt,name=txJSON,proto3" json:"txJSON,omitempty"`
	Instructions *Instructions `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"`
}

func (x *ResponsePrepareTransaction) Reset() {
	*x = ResponsePrepareTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePrepareTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePrepareTransaction) ProtoMessage() {}

func (x *ResponsePrepareTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePrepareTransaction.ProtoReflect.Descriptor instead.
func (*ResponsePrepareTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *ResponsePrepareTransaction) GetTxJSON() string {
	if x != nil {
		return x.TxJSON
	}
	return ""
}

func (x *ResponsePrepareTransaction) GetInstructions() *Instructions {
	if x != nil {
		return x.Instructions
	}
	return nil
}

type RequestSignTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxJSON string `protobuf:"bytes,1,opt,name=txJSON,proto3" json:"txJSON,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RequestSignTransaction) Reset() {
	*x = RequestSignTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSignTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSignTransaction) ProtoMessage() {}

func (x *RequestSignTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSignTransaction.ProtoReflect.Descriptor instead.
func (*RequestSignTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *RequestSignTransaction) GetTxJSON() string {
	if x != nil {
		return x.TxJSON
	}
	return ""
}

func (x *RequestSignTransaction) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type ResponseSignTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID   string `protobuf:"bytes,1,opt,name=txID,proto3" json:"txID,omitempty"`
	TxBlob string `protobuf:"bytes,2,opt,name=txBlob,proto3" json:"txBlob,omitempty"`
}

func (x *ResponseSignTransaction) Reset() {
	*x = ResponseSignTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSignTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSignTransaction) ProtoMessage() {}

func (x *ResponseSignTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSignTransaction.ProtoReflect.Descriptor instead.
func (*ResponseSignTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseSignTransaction) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *ResponseSignTransaction) GetTxBlob() string {
	if x != nil {
		return x.TxBlob
	}
	return ""
}

type RequestSubmitTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxBlob string `protobuf:"bytes,1,opt,name=txBlob,proto3" json:"txBlob,omitempty"`
}

func (x *RequestSubmitTransaction) Reset() {
	*x = RequestSubmitTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSubmitTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSubmitTransaction) ProtoMessage() {}

func (x *RequestSubmitTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSubmitTransaction.ProtoReflect.Descriptor instead.
func (*RequestSubmitTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *RequestSubmitTransaction) GetTxBlob() string {
	if x != nil {
		return x.TxBlob
	}
	return ""
}

type ResponseSubmitTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultJSONString      string `protobuf:"bytes,1,opt,name=resultJSONString,proto3" json:"resultJSONString,omitempty"`
	EarliestLedgerVersion uint64 `protobuf:"varint,2,opt,name=earliestLedgerVersion,proto3" json:"earliestLedgerVersion,omitempty"`
}

func (x *ResponseSubmitTransaction) Reset() {
	*x = ResponseSubmitTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSubmitTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSubmitTransaction) ProtoMessage() {}

func (x *ResponseSubmitTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSubmitTransaction.ProtoReflect.Descriptor instead.
func (*ResponseSubmitTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseSubmitTransaction) GetResultJSONString() string {
	if x != nil {
		return x.ResultJSONString
	}
	return ""
}

func (x *ResponseSubmitTransaction) GetEarliestLedgerVersion() uint64 {
	if x != nil {
		return x.EarliestLedgerVersion
	}
	return 0
}

type ResponseWaitValidation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerVersion uint64 `protobuf:"varint,1,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *ResponseWaitValidation) Reset() {
	*x = ResponseWaitValidation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWaitValidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWaitValidation) ProtoMessage() {}

func (x *ResponseWaitValidation) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWaitValidation.ProtoReflect.Descriptor instead.
func (*ResponseWaitValidation) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseWaitValidation) GetLedgerVersion() uint64 {
	if x != nil {
		return x.LedgerVersion
	}
	return 0
}

type RequestGetTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID             string `protobuf:"bytes,1,opt,name=txID,proto3" json:"txID,omitempty"`
	MinLedgerVersion uint64 `protobuf:"varint,2,opt,name=minLedgerVersion,proto3" json:"minLedgerVersion,omitempty"`
}

func (x *RequestGetTransaction) Reset() {
	*x = RequestGetTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetTransaction) ProtoMessage() {}

func (x *RequestGetTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetTransaction.ProtoReflect.Descriptor instead.
func (*RequestGetTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *RequestGetTransaction) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *RequestGetTransaction) GetMinLedgerVersion() uint64 {
	if x != nil {
		return x.MinLedgerVersion
	}
	return 0
}

type ResponseGetTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultJSONString string `protobuf:"bytes,1,opt,name=resultJSONString,proto3" json:"resultJSONString,omitempty"`
}

func (x *ResponseGetTransaction) Reset() {
	*x = ResponseGetTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetTransaction) ProtoMessage() {}

func (x *ResponseGetTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetTransaction.ProtoReflect.Descriptor instead.
func (*ResponseGetTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseGetTransaction) GetResultJSONString() string {
	if x != nil {
		return x.ResultJSONString
	}
	return ""
}

type RequestCombineTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTransactions []string `protobuf:"bytes,1,rep,name=signedTransactions,proto3" json:"signedTransactions,omitempty"`
}

func (x *RequestCombineTransaction) Reset() {
	*x = RequestCombineTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCombineTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCombineTransaction) ProtoMessage() {}

func (x *RequestCombineTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCombineTransaction.ProtoReflect.Descriptor instead.
func (*RequestCombineTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *RequestCombineTransaction) GetSignedTransactions() []string {
	if x != nil {
		return x.SignedTransactions
	}
	return nil
}

type ResponseCombineTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTransaction string `protobuf:"bytes,1,opt,name=signedTransaction,proto3" json:"signedTransaction,omitempty"`
	TxID              string `protobuf:"bytes,2,opt,name=txID,proto3" json:"txID,omitempty"`
}

func (x *ResponseCombineTransaction) Reset() {
	*x = ResponseCombineTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCombineTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCombineTransaction) ProtoMessage() {}

func (x *ResponseCombineTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCombineTransaction.ProtoReflect.Descriptor instead.
func (*ResponseCombineTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseCombineTransaction) GetSignedTransaction() string {
	if x != nil {
		return x.SignedTransaction
	}
	return ""
}

func (x *ResponseCombineTransaction) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

var File_transaction_proto protoreflect.FileDescriptor

var file_transaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x0c,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x19, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x72, 0x69, 0x70, 0x70,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x69,
	0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7d,
	0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x78, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78,
	0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x69, 0x70,
	0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48, 0x0a,
	0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x4a, 0x53, 0x4f,
	0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x4a, 0x53, 0x4f, 0x4e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x42, 0x6c, 0x6f, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x42, 0x6c, 0x6f, 0x62, 0x22, 0x32,
	0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78,
	0x42, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x42, 0x6c,
	0x6f, 0x62, 0x22, 0x7d, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x15, 0x65,
	0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x65, 0x61, 0x72, 0x6c,
	0x69, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x3e, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x57, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x2a,
	0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x53,
	0x4f, 0x4e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x4b, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a,
	0x1a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x2a, 0xb3, 0x03,
	0x0a, 0x13, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x58, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x58, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x54, 0x58, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x58, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x58, 0x5f, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a,
	0x12, 0x54, 0x58, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x41,
	0x55, 0x54, 0x48, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x58, 0x5f, 0x45, 0x53, 0x43, 0x52,
	0x4f, 0x57, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x58, 0x5f, 0x45, 0x53, 0x43, 0x52, 0x4f, 0x57, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10,
	0x07, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x58, 0x5f, 0x45, 0x53, 0x43, 0x52, 0x4f, 0x57, 0x5f, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x58, 0x5f, 0x4f, 0x46,
	0x46, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f,
	0x54, 0x58, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10,
	0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x10, 0x0c, 0x12,
	0x1d, 0x0a, 0x19, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x1b,
	0x0a, 0x17, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x0e, 0x12, 0x16, 0x0a, 0x12, 0x54,
	0x58, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x4b, 0x45,
	0x59, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x58, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x45, 0x52,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x58, 0x5f, 0x54, 0x52, 0x55, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x11, 0x1a, 0x04, 0x88,
	0xa3, 0x1e, 0x00, 0x32, 0xcc, 0x05, 0x0a, 0x14, 0x52, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x7b, 0x0a, 0x12,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x31, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x72,
	0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2e, 0x2e, 0x72, 0x69,
	0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x78, 0x0a,
	0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x57, 0x61, 0x69, 0x74, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2d, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x57, 0x61, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2d, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x72, 0x69,
	0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x31, 0x2e,
	0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x69, 0x72, 0x6f, 0x6d, 0x61, 0x69, 0x6c, 0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x78, 0x72, 0x70, 0x67, 0x72,
	0x70, 0x2f, 0x78, 0x72, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData = file_transaction_proto_rawDesc
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_transaction_proto_rawDescData)
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_transaction_proto_goTypes = []interface{}{
	(EnumTransactionType)(0),           // 0: rippleapi.transaction.EnumTransactionType
	(*Instructions)(nil),               // 1: rippleapi.transaction.Instructions
	(*RequestPrepareTransaction)(nil),  // 2: rippleapi.transaction.RequestPrepareTransaction
	(*ResponsePrepareTransaction)(nil), // 3: rippleapi.transaction.ResponsePrepareTransaction
	(*RequestSignTransaction)(nil),     // 4: rippleapi.transaction.RequestSignTransaction
	(*ResponseSignTransaction)(nil),    // 5: rippleapi.transaction.ResponseSignTransaction
	(*RequestSubmitTransaction)(nil),   // 6: rippleapi.transaction.RequestSubmitTransaction
	(*ResponseSubmitTransaction)(nil),  // 7: rippleapi.transaction.ResponseSubmitTransaction
	(*ResponseWaitValidation)(nil),     // 8: rippleapi.transaction.ResponseWaitValidation
	(*RequestGetTransaction)(nil),      // 9: rippleapi.transaction.RequestGetTransaction
	(*ResponseGetTransaction)(nil),     // 10: rippleapi.transaction.ResponseGetTransaction
	(*RequestCombineTransaction)(nil),  // 11: rippleapi.transaction.RequestCombineTransaction
	(*ResponseCombineTransaction)(nil), // 12: rippleapi.transaction.ResponseCombineTransaction
	(*emptypb.Empty)(nil),              // 13: google.protobuf.Empty
}
var file_transaction_proto_depIdxs = []int32{
	0,  // 0: rippleapi.transaction.RequestPrepareTransaction.tx_type:type_name -> rippleapi.transaction.EnumTransactionType
	1,  // 1: rippleapi.transaction.RequestPrepareTransaction.instructions:type_name -> rippleapi.transaction.Instructions
	1,  // 2: rippleapi.transaction.ResponsePrepareTransaction.instructions:type_name -> rippleapi.transaction.Instructions
	2,  // 3: rippleapi.transaction.RippleTransactionAPI.PrepareTransaction:input_type -> rippleapi.transaction.RequestPrepareTransaction
	4,  // 4: rippleapi.transaction.RippleTransactionAPI.SignTransaction:input_type -> rippleapi.transaction.RequestSignTransaction
	6,  // 5: rippleapi.transaction.RippleTransactionAPI.SubmitTransaction:input_type -> rippleapi.transaction.RequestSubmitTransaction
	13, // 6: rippleapi.transaction.RippleTransactionAPI.WaitValidation:input_type -> google.protobuf.Empty
	9,  // 7: rippleapi.transaction.RippleTransactionAPI.GetTransaction:input_type -> rippleapi.transaction.RequestGetTransaction
	11, // 8: rippleapi.transaction.RippleTransactionAPI.CombineTransaction:input_type -> rippleapi.transaction.RequestCombineTransaction
	3,  // 9: rippleapi.transaction.RippleTransactionAPI.PrepareTransaction:output_type -> rippleapi.transaction.ResponsePrepareTransaction
	5,  // 10: rippleapi.transaction.RippleTransactionAPI.SignTransaction:output_type -> rippleapi.transaction.ResponseSignTransaction
	7,  // 11: rippleapi.transaction.RippleTransactionAPI.SubmitTransaction:output_type -> rippleapi.transaction.ResponseSubmitTransaction
	8,  // 12: rippleapi.transaction.RippleTransactionAPI.WaitValidation:output_type -> rippleapi.transaction.ResponseWaitValidation
	10, // 13: rippleapi.transaction.RippleTransactionAPI.GetTransaction:output_type -> rippleapi.transaction.ResponseGetTransaction
	12, // 14: rippleapi.transaction.RippleTransactionAPI.CombineTransaction:output_type -> rippleapi.transaction.ResponseCombineTransaction
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instructions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPrepareTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePrepareTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSignTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSignTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSubmitTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSubmitTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWaitValidation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCombineTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCombineTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transaction_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		EnumInfos:         file_transaction_proto_enumTypes,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_rawDesc = nil
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
