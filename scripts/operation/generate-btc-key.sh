#!/bin/sh

# Prerequisite
# create wallet
# $ make create-wallets
#
# encrypt wallet
#  $ make encrypt-wallets

# reset database and wallet if you want to start from the beginning
# $ make rm-local-wallet-dat
# $ make create-wallets

set -eu


COIN="${1:?btc}"

###############################################################################
# keygen wallet
###############################################################################
# create seed
keygen create seed

# create hdkey for client, deposit, payment account
keygen -coin ${COIN} create hdkey -account client -keynum 10
keygen -coin ${COIN} create hdkey -account deposit -keynum 10
keygen -coin ${COIN} create hdkey -account payment -keynum 10
keygen -coin ${COIN} create hdkey -account stored -keynum 10

# import generated private key into keygen wallet
# if wallet is encrypted, walletpassphrase is required before
keygen api walletpassphrase -passphrase test
keygen -coin ${COIN} import privkey -account client
keygen -coin ${COIN} import privkey -account deposit
keygen -coin ${COIN} import privkey -account payment
keygen -coin ${COIN} import privkey -account stored
keygen api walletlock


###############################################################################
# sign wallet
###############################################################################
# create seed
sign create seed

# create hdkey for authorization
sign -coin ${COIN} -wallet sign1 create hdkey
sign2 -coin ${COIN} -wallet sign2 create hdkey
sign3 -coin ${COIN} -wallet sign3 create hdkey
sign4 -coin ${COIN} -wallet sign4 create hdkey
sign5 -coin ${COIN} -wallet sign5 create hdkey

# import generated private key into sign wallet
# if wallet is encrypted, walletpassphrase is required before

sign -coin ${COIN} -wallet sign1 api walletpassphrase -passphrase test
sign -coin ${COIN} -wallet sign1 import privkey
sign -coin ${COIN} -wallet sign1 api walletlock

sign2 -coin ${COIN} -wallet sign2 api walletpassphrase -passphrase test
sign2 -coin ${COIN} -wallet sign2 import privkey
sign2 -coin ${COIN} -wallet sign2 api walletlock

sign3 -coin ${COIN} -wallet sign3 api walletpassphrase -passphrase test
sign3 -coin ${COIN} -wallet sign3 import privkey
sign3 -coin ${COIN} -wallet sign3 api walletlock

sign4 -coin ${COIN} -wallet sign4 api walletpassphrase -passphrase test
sign4 -coin ${COIN} -wallet sign4 import privkey
sign4 -coin ${COIN} -wallet sign4 api walletlock

sign5 -coin ${COIN} -wallet sign5 api walletpassphrase -passphrase test
sign5 -coin ${COIN} -wallet sign5 import privkey
sign5 -coin ${COIN} -wallet sign5 api walletlock

# export full-pubkey as csv file
# sign -wallet sign1 export fullpubkey
file_fullpubkey_auth1=$(sign -coin "${COIN}" -wallet sign1 export fullpubkey)
file_fullpubkey_auth2=$(sign2 -coin "${COIN}" -wallet sign2 export fullpubkey)
file_fullpubkey_auth3=$(sign3 -coin "${COIN}" -wallet sign3 export fullpubkey)
file_fullpubkey_auth4=$(sign4 -coin "${COIN}" -wallet sign4 export fullpubkey)
file_fullpubkey_auth5=$(sign5 -coin "${COIN}" -wallet sign5 export fullpubkey)


###############################################################################
# keygen wallet
###############################################################################
# import full-pubkey
# keygen import fullpubkey -file ./data/pubkey/auth1_1588399093997165000.csv
keygen -coin ${COIN} import fullpubkey -file ${file_fullpubkey_auth1##*\[fileName\]: }
keygen -coin ${COIN} import fullpubkey -file ${file_fullpubkey_auth2##*\[fileName\]: }
keygen -coin ${COIN} import fullpubkey -file ${file_fullpubkey_auth3##*\[fileName\]: }
keygen -coin ${COIN} import fullpubkey -file ${file_fullpubkey_auth4##*\[fileName\]: }
keygen -coin ${COIN} import fullpubkey -file ${file_fullpubkey_auth5##*\[fileName\]: }

# create multisig address
keygen -coin ${COIN} create multisig -account deposit
keygen -coin ${COIN} create multisig -account payment
keygen -coin ${COIN} create multisig -account stored

# export address
file_address_client=$(keygen -coin "${COIN}" export address -account client)
file_address_deposit=$(keygen -coin "${COIN}" export address -account deposit)
file_address_payment=$(keygen -coin "${COIN}" export address -account payment)
file_address_stored=$(keygen -coin "${COIN}" export address -account stored)


###############################################################################
# watch only wallet
###############################################################################
# import addresses generated by keygen wallet
# if wallet.dat is deleted, rescan is required by `-rescan`
watch -coin ${COIN} import address -file ${file_address_client##*\[fileName\]: }
watch -coin ${COIN} import address -file ${file_address_deposit##*\[fileName\]: }
watch -coin ${COIN} import address -file ${file_address_payment##*\[fileName\]: }
watch -coin ${COIN} import address -file ${file_address_stored##*\[fileName\]: }
